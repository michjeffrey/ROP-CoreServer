/**
 * The template type of dictionary.
 */
export interface Dict<T> {
    [key: string]: T;
}
/**
 * The template type of dictionary.
 *
 * @deprecated Use `Dict` instead. This will be removed in v1.0.0.
 */
export declare type IDictionary<T> = Dict<T>;
/**
 * Semantically stressing an nullable type.
 */
export declare type Nullable<T> = T | null;
/**
 * Semantically stressing an optional type.
 */
export declare type Optional<T> = T | undefined;
/**
 * The signature of decorator for classes.
 */
export declare type ClassDecorator = (target: Function) => void;
/**
 * The signature of decorator for methods.
 */
export declare type MethodDecorator = (target: Object, property: string | symbol) => void;
export * from "./class.Exception";
export * from "./class.RawPromise";
export * from "./class.TimeoutPromise";
import * as Async from "./utilities.async";
import * as Validators from "./utilities.validators";
export { Async, Validators };
