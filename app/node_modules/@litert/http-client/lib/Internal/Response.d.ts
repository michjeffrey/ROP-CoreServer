/**
 * Copyright 2023 Angus.Fenying <fenying@litert.org>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/// <reference types="node" />
/// <reference types="node" />
import * as C from '../Common';
import { Readable } from 'stream';
export declare class HttpClientResponse implements C.IResponse {
    private readonly _protocol;
    private readonly _stream;
    private readonly _contentLength;
    private readonly _headers;
    private readonly _statusCode;
    private readonly _gzip?;
    private readonly _deflate?;
    private readonly _noEntity?;
    constructor(_protocol: C.EProtocol, _stream: Readable, _contentLength: number, _headers: C.TResponseHeaders, _statusCode: number, _gzip?: boolean | undefined, _deflate?: boolean | undefined, _noEntity?: boolean | undefined);
    abort(): void;
    get headers(): C.TResponseHeaders;
    get statusCode(): number;
    get contentLength(): number;
    get protocol(): C.EProtocol;
    getBuffer(maxLength?: number): Promise<Buffer>;
    getStream(): Readable;
    getRawStream(): Readable;
    isSuccess(): boolean;
    isRedirection(): boolean;
    isClientError(): boolean;
    isServerError(): boolean;
    isContinue(): boolean;
    isUpgrade(): boolean;
}
//# sourceMappingURL=Response.d.ts.map