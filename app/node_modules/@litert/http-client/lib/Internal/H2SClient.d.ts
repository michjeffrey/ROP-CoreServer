/**
 * Copyright 2023 Angus.Fenying <fenying@litert.org>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/// <reference types="node" />
/// <reference types="node" />
import * as $TLS from 'tls';
import * as C from '../Common';
import * as $H2 from 'http2';
import * as A from './Abstract';
import { AbstractHttp2Client } from './AbstractHttp2Client';
export declare class H2SClient extends AbstractHttp2Client implements A.IProtocolClient {
    constructor(helper: A.IHelper);
    request(opts: C.IRequestOptions, tlsSocket?: $TLS.TLSSocket, key?: string): Promise<A.IRequestResult>;
    protected _prepareOptions(opts: C.IRequestOptions): $H2.SecureClientSessionOptions;
    getAuthorityKey(opts: C.IRequestOptions): string;
}
//# sourceMappingURL=H2SClient.d.ts.map