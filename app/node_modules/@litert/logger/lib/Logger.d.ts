/**
 *  Copyright 2022 Angus.Fenying <fenying@litert.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
import { ILevelOptions } from './Internal';
import { IFormatter, IDriver, IBaseLogger } from './Common';
declare class Logger implements IBaseLogger<string> {
    /**
     * The options
     */
    protected _options: Record<string, ILevelOptions>;
    /**
     * The subject of current logger.
     */
    protected _subject: string;
    /**
     * The log formatter of current logger.
     */
    protected _formatter: IFormatter<any, string>;
    /**
     * The log output driver of current logger.
     */
    protected _driver: IDriver;
    /**
     * The log levels of current logger.
     */
    protected _levels: string[];
    constructor(subject: string, driver: IDriver, settings: Record<string, ILevelOptions>, wraper?: IFormatter<any, string>, levels?: string[]);
    flush(): void | Promise<void>;
    getSubject(): string;
    getLevels(): string[];
    enableTrace(depth?: number, levels?: string | string[]): this;
    unmute(levels?: string | string[]): this;
    mute(levels?: string | string[]): this;
    protected _updateMethod(lv: string): void;
}
export default Logger;
//# sourceMappingURL=Logger.d.ts.map