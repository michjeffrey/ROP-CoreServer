/**
 *  Copyright 2021 Angus.Fenying <fenying@litert.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/// <reference types="node" />
import * as C from './Common';
import { Readable } from 'stream';
export declare type IAlgorithms = 'blake2b512' | 'blake2s256' | 'md4' | 'md5' | 'md5-sha1' | 'mdc2' | 'ripemd' | 'ripemd160' | 'rmd160' | 'sha1' | 'sha224' | 'sha256' | 'sha3-224' | 'sha3-256' | 'sha3-384' | 'sha3-512' | 'sha384' | 'sha512' | 'sha512-224' | 'sha512-256' | 'sm3' | 'whirlpool';
export declare function getSupportedAlgorithms(): IAlgorithms[];
export declare function sign(algo: IAlgorithms, key: Buffer | string, message: Buffer | string): Buffer;
export declare function verify(algo: IAlgorithms, key: Buffer | string, message: Buffer | string, signature: Buffer): boolean;
export declare function signStream(algo: IAlgorithms, key: Buffer | string, message: Readable): Promise<Buffer>;
export declare function verifyStream(algo: IAlgorithms, key: Buffer | string, message: Readable, signature: Buffer): Promise<boolean>;
export declare function createSigner(algo: IAlgorithms, key: Buffer | string): C.ISigner;
//# sourceMappingURL=HMAC.d.ts.map