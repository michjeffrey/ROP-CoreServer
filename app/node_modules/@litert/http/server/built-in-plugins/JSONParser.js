"use strict";
/*
   +----------------------------------------------------------------------+
   | LiteRT HTTP.js Library                                               |
   +----------------------------------------------------------------------+
   | Copyright (c) 2018 Fenying Studio                                    |
   +----------------------------------------------------------------------+
   | This source file is subject to version 2.0 of the Apache license,    |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | https://github.com/litert/http.js/blob/master/LICENSE                |
   +----------------------------------------------------------------------+
   | Authors: Angus Fenying <fenying@litert.org>                          |
   +----------------------------------------------------------------------+
 */
Object.defineProperty(exports, "__esModule", { value: true });
const Exception_1 = require("../Exception");
const Errors_1 = require("../Errors");
class JSONParser {
    async parse(request, opts) {
        if (opts.assert) {
            if (request.getContentInfo().type !== "application/json") {
                throw new Exception_1.default(Errors_1.default.UNACCEPTABLE_CONTENT_TYPE, "The content data is unparsable.");
            }
        }
        const data = await request.getContent({
            type: "raw",
            maxBytes: opts.maxBytes
        });
        try {
            return JSON.parse(data.toString());
        }
        catch (_a) {
            throw new Exception_1.default(Errors_1.default.UNACCEPTABLE_CONTENT_TYPE, "The content data is unparsable.");
        }
    }
}
function createJSONParser() {
    return new JSONParser();
}
exports.createJSONParser = createJSONParser;
//# sourceMappingURL=JSONParser.js.map