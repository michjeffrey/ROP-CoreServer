/**
 *  Copyright 2021 Angus.Fenying <fenying@litert.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
import * as C from './Common';
import { ParseRulesVessel } from './ParseRules';
export declare enum EParserStatus {
    IDLE = 0,
    READING_COMMAND = 1,
    READING_ARGUMENTS = 2,
    READING_OPTION_ARG = 3
}
export declare class ParserContext {
    rules: ParseRulesVessel;
    private _opts;
    args: string[];
    status: EParserStatus;
    data: Record<string, any>;
    constructor(rules: ParseRulesVessel, _opts: C.IParserPreferences, args: string[]);
    private _result;
    cursor: number;
    getCurrentPiece(): string;
    end(): void;
    next(): boolean;
    saveArgument(argument: string): void;
    saveTailingArguments(argument: string[]): void;
    complete(): void;
    getResult(): C.IParseResult;
    saveOption(option: C.IOptionConfig, value: string): void;
    saveFlag(flag: C.IFlagConfig): void;
    saveUnknownFlag(expr: string): void;
    saveCommand(commandName: string): void;
    resetStatus(): void;
    countArguments(): number;
}
//# sourceMappingURL=ParserContext.d.ts.map