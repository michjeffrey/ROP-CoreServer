"use strict";
/**
 *  Copyright 2021 Angus.Fenying <fenying@litert.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractFullAssignExpr = exports.isFullAssignExpr = exports.isShortAttachLikeExpr = exports.isShortAssignExpr = exports.isShortFlagMixedExpr = exports.isFullFlagExpr = exports.isValidCommandShortcut = exports.isValidCommandName = exports.isValidOptionShortcut = exports.isValidFlagShortcut = exports.isValidFlagName = void 0;
function isValidFlagName(token) {
    return /^[a-z][-a-z0-9]+$/i.test(token);
}
exports.isValidFlagName = isValidFlagName;
function isValidFlagShortcut(token) {
    return /^[a-zA-Z]$/i.test(token);
}
exports.isValidFlagShortcut = isValidFlagShortcut;
function isValidOptionShortcut(token) {
    return /^[a-zA-Z]$/.test(token);
}
exports.isValidOptionShortcut = isValidOptionShortcut;
function isValidCommandName(token) {
    return /^[a-z][-a-z0-9]+$/i.test(token);
}
exports.isValidCommandName = isValidCommandName;
function isValidCommandShortcut(token) {
    return /^[a-z][-a-z0-9]*$/i.test(token);
}
exports.isValidCommandShortcut = isValidCommandShortcut;
function isFullFlagExpr(token) {
    return /^--[a-z][-a-z0-9]+$/i.test(token);
}
exports.isFullFlagExpr = isFullFlagExpr;
function isShortFlagMixedExpr(token) {
    return /^-[a-z]+$/i.test(token);
}
exports.isShortFlagMixedExpr = isShortFlagMixedExpr;
/**
 * Check if token matches `-n=value` pattern.
 */
function isShortAssignExpr(token) {
    return /^-[a-z]=.+$/i.test(token);
}
exports.isShortAssignExpr = isShortAssignExpr;
/**
 * Check if token matches `-n<arg>` pattern.
 */
function isShortAttachLikeExpr(token) {
    return /^-[a-z].+/i.test(token);
}
exports.isShortAttachLikeExpr = isShortAttachLikeExpr;
/**
 * Check if token matches `--name=value` pattern.
 */
function isFullAssignExpr(token) {
    return /^--[a-z][-a-z0-9]+=.+$/i.test(token);
}
exports.isFullAssignExpr = isFullAssignExpr;
function extractFullAssignExpr(expr) {
    const segs = expr.split('=');
    return [segs[0].slice(2), segs.slice(1).join('=')];
}
exports.extractFullAssignExpr = extractFullAssignExpr;
//# sourceMappingURL=Utils.js.map